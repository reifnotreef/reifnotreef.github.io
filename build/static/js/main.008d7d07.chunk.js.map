{"version":3,"sources":["Projects/ProjectCard.tsx","services/getProjects.ts","Projects/ProjectsContainer.tsx","services/getUser.ts","Header.tsx","Navigation.tsx","index.tsx"],"names":["ProjectCard","project","className","style","borderTop","display","margin","name","target","rel","href","url","paddingLeft","htmlColor","homepageUrl","maxWidth","description","languages","edges","map","i","key","node","id","getProjects","a","fetch","method","body","JSON","stringify","query","headers","Authorization","process","then","res","json","data","user","pinnedItems","Projects","ProjectsContainer","useState","projects","setProjects","updateProject","blah","useEffect","length","Skeleton","variant","animation","height","width","require","getUser","catch","error","console","Header","setUser","info","src","avatarUrl","alt","borderRadius","marginLeft","marginRight","isHireable","position","top","bio","company","textDecoration","Navigation","bottom","paddingTop","backgroundColor","justifyContent","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.008d7d07.chunk.js","sourcesContent":["import React from \"react\";\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport WebIcon from \"@material-ui/icons/Web\";\n\nexport type Project = {\n  id: string;\n  name: string;\n  url: string;\n  homepageUrl: string;\n  description: string;\n  languages: {edges: {node: { name: string}}[]};\n}\n\nconst ProjectCard: React.FC<{ project: Project }> = ({ project }) => {\n  return (\n    <section\n      className=\"project-card\"\n      key={project.id}\n      style={{ borderTop: \"1px solid black\" }}\n    >\n      <div>\n        <h3\n          className=\"project-name\"\n          style={{ display: \"inline-block\", margin: 0 }}\n        >\n          {project.name}\n        </h3>\n        <a\n          className=\"project-links\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={project.url}\n          style={{ display: \"inline-block\", paddingLeft: \"1rem\" }}\n        >\n          <GitHubIcon htmlColor=\"black\" />\n        </a>\n        {project.homepageUrl !== \"\" ? (\n          <a\n            className=\"project-links\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={project.homepageUrl}\n          >\n            <WebIcon htmlColor=\"black\" />\n          </a>\n        ) : (\n          <></>\n        )}\n      </div>\n      <p className=\"project-description\" style={{ maxWidth: \"60rem\" }}>\n        {project.description}\n      </p>\n      <p className=\"project-languages\">Languages: </p>\n      <ul>\n        {project?.languages?.edges?.map((i, key) => (\n          <li key={key}>{i?.node?.name}</li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default ProjectCard;\n","import { Project } from \"../Projects/ProjectCard\";\nimport fetch from \"node-fetch\";\n\n// this is a read only token\nconst token = process.env.REACT_APP_API_KEY;\nconst query = `query {\n  user(login: \"reifnotreef\") {\n    pinnedItems(first: 6, types: [REPOSITORY]) {\n      totalCount\n      edges {\n        node {\n          ... on Repository {\n            homepageUrl\n            name\n            description\n            id\n            url\n            languages(first: 6) {\n              edges {\n                node {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nconst getProjects = async (): Promise<Project[]> => {\n  // const Projects: Project[] = [];\n  const Projects: Project[] = await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({ query }),\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res: any) => res.json())\n    .then((res: any) =>\n      res?.data?.user?.pinnedItems?.edges?.map((i: {node: Project}) => i?.node)\n    );\n  return Projects;\n};\n\nexport default getProjects;\n","import React, { useEffect, useState } from \"react\";\n\nimport ProjectCard, { Project } from \"./ProjectCard\";\n\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport getProjects from \"../services/getProjects\";\n\nconst ProjectsContainer: React.FC = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const updateProject = async () => {\n    const blah = await getProjects();\n    setProjects(blah);\n  };\n  useEffect(() => {\n    updateProject();\n  }, []);\n\n  return (\n      <section className=\"projects-container\">\n        {projects && projects.length > 0 ? (\n          <>\n            <section className=\"projects-header\">\n              <h1>Projects</h1>\n            </section>\n            {projects.map((project) => (\n              <ProjectCard project={project} key={project.id} />\n            ))}\n          </>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            animation=\"pulse\"\n            height={\"100%\"}\n            width={\"100%\"}\n          />\n        )}\n      </section>\n  );\n};\n\nexport default ProjectsContainer;\n","const fetch = require(\"node-fetch\");\n\nconst token = process.env.REACT_APP_API_KEY;\nconst query = `query {\n    user(login: \"reifnotreef\") {\n      bio\n      avatarUrl\n      email\n      isHireable\n      name\n      company\n    }\n  }`;\n\nconst getUser = async () => {\n  return await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({ query }),\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then((res: any) => res.json())\n    .then((res: any) => res.data.user)\n    .catch((error: any) => console.error(error));\n};\n\nexport default getUser;\n","import React, { useState, useEffect } from 'react';\n\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport getUser from './services/getUser';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\ntype User = {\n  avatarUrl: string;\n  name: string;\n  isHireable: boolean;\n  bio: string;\n  company: string;\n};\n\nconst Header: React.FC = () => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser().then((info: User) => setUser(info));\n  }, []);\n\n  return user == null ? (\n    <Skeleton\n      variant='circle'\n      animation='pulse'\n      height={'20rem'}\n      width={'20rem'}\n    />\n  ) : (\n    <section className='header-container'>\n      <img\n        src={user.avatarUrl}\n        alt='me'\n        className='profile-image'\n        style={{\n          height: '20rem',\n          width: '20rem',\n          borderRadius: '50%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          display: 'block'\n        }}\n      />\n      <div className='header-copy'>\n        <h4>{user.name}</h4>\n        <p>\n          hirable:{' '}\n          {user.isHireable === true ? (\n            <CheckCircleOutlineIcon\n              className='hireable-icon'\n              htmlColor='black'\n              style={{\n                display: 'inline-block',\n                position: 'relative',\n                top: '5px'\n              }}\n            />\n          ) : (\n            <HighlightOffIcon\n              className='hireable-icon'\n              htmlColor='black'\n              style={{\n                display: 'inline-block',\n                position: 'relative',\n                top: '5px'\n              }}\n            />\n          )}\n        </p>\n        <p style={{ maxWidth: '60rem' }}>about me: {user.bio}</p>\n        <p style={{ maxWidth: '60rem' }}>company: <a href={user.company} style={{ textDecoration: 'none' }}>Dottid</a></p>\n      </div>\n    </section>\n  );\n};\nexport default Header;\n","import HomeIcon from '@material-ui/icons/Home';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\n\nimport React from 'react';\n\nexport const Navigation = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        height: '2rem',\n        paddingTop: '0.25rem',\n        backgroundColor: 'black',\n        display: 'flex',\n        justifyContent: 'center'\n      }}\n      className='navigation-container'\n    >\n      <div\n        style={{\n          width: '60rem',\n          display: 'flex',\n          justifyContent: 'space-evenly'\n        }}\n      >\n        <a href='#root'>\n          <HomeIcon htmlColor='white' />\n        </a>\n        <a\n          href='mailto:bridgerrhammond@gmail.com'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <EmailIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://github.com/reifnotreef'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <GitHubIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://www.linkedin.com/in/bridgerhammond/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <LinkedInIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://github.com/reifnotreef/reifnotreef.github.io/raw/deploy/img/BRH_Resume.pdf'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <PictureAsPdfIcon htmlColor='white' />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\nimport Header from \"./Header\";\n\nimport \"./index.css\";\nimport { Navigation } from \"./Navigation\";\n\nconst App: React.FC = () => (\n  <>\n    <Header />\n    <ProjectsContainer />\n    <Navigation />\n  </>\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}