{"version":3,"sources":["Projects/ProjectCard.tsx","services/getProjects.ts","Projects/ProjectsContainer.tsx","services/getUser.ts","Header.js","Navigation.js","index.tsx"],"names":["ProjectCard","project","className","key","id","style","borderTop","display","margin","name","target","rel","href","url","paddingLeft","htmlColor","homepageUrl","maxWidth","description","languages","edges","map","i","node","fetch","require","getProjects","a","method","body","JSON","stringify","query","headers","Authorization","process","then","res","json","data","user","pinnedItems","p","catch","error","console","ProjectsContainer","useState","projects","setProjects","useEffect","projs","length","Skeleton","variant","animation","height","width","getUser","Header","setUser","info","src","avatarUrl","alt","borderRadius","marginLeft","marginRight","isHireable","position","top","bio","company","textDecoration","Navigation","bottom","paddingTop","backgroundColor","justifyContent","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.88a24a99.chunk.js","sourcesContent":["import React from \"react\";\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport WebIcon from \"@material-ui/icons/Web\";\n\nexport type Project = {\n  id: string;\n  name: string;\n  url: string;\n  homepageUrl: string;\n  description: string;\n  languages: {edges: {node: { name: string}}[]};\n}\n\nconst ProjectCard: React.FC<{ project: Project }> = ({ project }) => {\n  return (\n    <section\n      className=\"project-card\"\n      key={project.id}\n      style={{ borderTop: \"1px solid black\" }}\n    >\n      <div>\n        <h3\n          className=\"project-name\"\n          style={{ display: \"inline-block\", margin: 0 }}\n        >\n          {project.name}\n        </h3>\n        <a\n          className=\"project-links\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={project.url}\n          style={{ display: \"inline-block\", paddingLeft: \"1rem\" }}\n        >\n          <GitHubIcon htmlColor=\"black\" />\n        </a>\n        {project.homepageUrl !== \"\" ? (\n          <a\n            className=\"project-links\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={project.homepageUrl}\n          >\n            <WebIcon htmlColor=\"black\" />\n          </a>\n        ) : (\n          <></>\n        )}\n      </div>\n      <p className=\"project-description\" style={{ maxWidth: \"60rem\" }}>\n        {project.description}\n      </p>\n      <p className=\"project-languages\">Languages: </p>\n      <ul>\n        {project.languages.edges.map((i, key) => (\n          <li key={key}>{i.node.name}</li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default ProjectCard;\n","import { Project } from \"../Projects/ProjectCard\";\n\nconst fetch = require(\"node-fetch\");\n\n// this is a read only token\nconst token = process.env.REACT_APP_API_KEY;\nconst query = `query {\n  user(login: \"reifnotreef\") {\n    pinnedItems(first: 6, types: [REPOSITORY]) {\n      totalCount\n      edges {\n        node {\n          ... on Repository {\n            homepageUrl\n            name\n            description\n            id\n            url\n            languages(first: 6) {\n              edges {\n                node {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`;\n\nconst getProjects = async (): Promise<Project[]> => {\n  return await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({ query }),\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res: { json: () => any; }) => res.json())\n    .then((res: { data: { user: { pinnedItems: { edges: Project[]; }; }; }; }) => res.data.user.pinnedItems.edges.map((p: Project) => p))\n    .catch((error: any) => console.error(error));\n};\n\nexport default getProjects;\n","import React, { useEffect, useState } from \"react\";\n\nimport ProjectCard, { Project } from \"./ProjectCard\";\nimport getProjects from \"../services/getProjects\";\n\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst ProjectsContainer: React.FC = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n\n  useEffect(() => {\n    getProjects().then(projs => setProjects(projs));\n  }, []);\n\n  return (\n    <>\n      <section className=\"projects-container\">\n        {projects && projects.length > 0 ? (\n          <>\n            <section className=\"projects-header\">\n              <h1>Projects</h1>\n            </section>\n            {projects.map((project) => (\n              <ProjectCard project={project} key={project.id} />\n            ))}\n          </>\n        ) : (\n          <Skeleton\n            variant=\"rect\"\n            animation=\"pulse\"\n            height={\"100%\"}\n            width={\"100%\"}\n          />\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default ProjectsContainer;\n","const fetch = require(\"node-fetch\");\n\nconst token = process.env.REACT_APP_API_KEY;\nconst query = `query {\n    user(login: \"reifnotreef\") {\n      bio\n      avatarUrl\n      email\n      isHireable\n      name\n      company\n    }\n  }`;\n\nconst getUser = async () => {\n  return await fetch(\"https://api.github.com/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({ query }),\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then((res: any) => res.json())\n    .then((res: any) => res.data.user)\n    .catch((error: any) => console.error(error));\n};\n\nexport default getUser;\n","import React, { useState, useEffect } from 'react';\n\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport getUser from './services/getUser';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nconst Header = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    getUser().then(info => setUser(info));\n  }, []);\n\n  return user == null ? (\n    <Skeleton\n      variant='circle'\n      animation='pulse'\n      height={'20rem'}\n      width={'20rem'}\n    />\n  ) : (\n    <section className='header-container'>\n      <img\n        src={user.avatarUrl}\n        alt='me'\n        className='profile-image'\n        style={{\n          height: '20rem',\n          width: '20rem',\n          borderRadius: '50%',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          display: 'block'\n        }}\n      />\n      <div className='header-copy'>\n        <h4>{user.name}</h4>\n        <p>\n          hirable:{' '}\n          {user.isHireable === true ? (\n            <CheckCircleOutlineIcon\n              className='hireable-icon'\n              htmlColor='black'\n              style={{\n                display: 'inline-block',\n                position: 'relative',\n                top: '5px'\n              }}\n            />\n          ) : (\n            <HighlightOffIcon\n              className='hireable-icon'\n              htmlColor='black'\n              style={{\n                display: 'inline-block',\n                position: 'relative',\n                top: '5px'\n              }}\n            />\n          )}\n        </p>\n        <p style={{ maxWidth: '60rem' }}>about me: {user.bio}</p>\n        <p style={{ maxWidth: '60rem' }}>company: <a href={user.company} style={{ textDecoration: 'none' }}>Dottid</a></p>\n      </div>\n    </section>\n  );\n};\nexport default Header;\n","// import BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\n\nimport React from 'react';\n\nexport const Navigation = () => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        height: '2rem',\n        paddingTop: '0.25rem',\n        backgroundColor: 'black',\n        display: 'flex',\n        justifyContent: 'center'\n      }}\n      className='navigation-container'\n    >\n      <div\n        style={{\n          width: '60rem',\n          display: 'flex',\n          justifyContent: 'space-evenly'\n        }}\n      >\n        <a href='#root'>\n          <HomeIcon htmlColor='white' />\n        </a>\n        <a\n          href='mailto:bridgerrhammond@gmail.com'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <EmailIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://github.com/reifnotreef'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <GitHubIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://www.linkedin.com/in/bridgerhammond/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <LinkedInIcon htmlColor='white' />\n        </a>\n        <a\n          href='https://github.com/reifnotreef/reifnotreef.github.io/raw/deploy/img/BRH_Resume.pdf'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <PictureAsPdfIcon htmlColor='white' />\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\nimport Header from \"./Header\";\n\nimport \"./index.css\";\nimport { Navigation } from \"./Navigation\";\n\nconst App: React.FC = () => (\n  <>\n    <Header />\n    <ProjectsContainer />\n    <Navigation />\n  </>\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}