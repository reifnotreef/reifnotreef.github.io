{"version":3,"sources":["Projects/ProjectCard.js","services/getProjects.js","Projects/ProjectsContainer.js","services/getUser.js","Header.js","Navigation.js","index.js"],"names":["ProjectCard","props","className","key","project","id","style","borderTop","display","margin","name","target","rel","href","url","paddingLeft","htmlColor","homepageUrl","maxWidth","description","languages","edges","map","i","node","fetch","require","token","process","REACT_APP_API_KEY","getProjects","a","Projects","method","body","JSON","stringify","query","headers","Authorization","then","res","json","data","user","pinnedItems","forEach","push","catch","error","console","ProjectsContainer","useState","projects","setProjects","useEffect","projs","length","Skeleton","variant","animation","height","width","getUser","Header","setUser","info","src","avatarUrl","alt","borderRadius","marginLeft","marginRight","isHireable","position","top","bio","Navigation","bottom","paddingTop","backgroundColor","justifyContent","App","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a6f9bc52.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport WebIcon from \"@material-ui/icons/Web\";\r\n\r\nconst ProjectCard = props => {\r\n  return (\r\n    <section\r\n      className=\"project-card\"\r\n      key={props.project.id}\r\n      style={{ borderTop: \"1px solid black\" }}\r\n    >\r\n      <div>\r\n        <h3\r\n          className=\"project-name\"\r\n          style={{ display: \"inline-block\", margin: 0 }}\r\n        >\r\n          {props.project.name}\r\n        </h3>\r\n        <a\r\n          className=\"project-links\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={props.project.url}\r\n          style={{ display: \"inline-block\", paddingLeft: \"1rem\" }}\r\n        >\r\n          <GitHubIcon htmlColor=\"black\" />\r\n        </a>\r\n        {props.project.homepageUrl !== \"\" ? (\r\n          <a\r\n            className=\"project-links\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={props.project.homepageUrl}\r\n          >\r\n            <WebIcon htmlColor=\"black\" />\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <p className=\"project-description\" style={{ maxWidth: \"60rem\" }}>\r\n        {props.project.description}\r\n      </p>\r\n      <p className=\"project-languages\">Languages: </p>\r\n      <ul>\r\n        {props.project.languages.edges.map((i, key) => (\r\n          <li key={key}>{i.node.name}</li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","const fetch = require(\"node-fetch\");\r\n\r\n// this is a read only token\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n  user(login: \"reifnotreef\") {\r\n    pinnedItems(first: 6, types: [REPOSITORY]) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          ... on Repository {\r\n            homepageUrl\r\n            name\r\n            description\r\n            id\r\n            url\r\n            languages(first: 6) {\r\n              edges {\r\n                node {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nconst getProjects = async () => {\r\n  const Projects = [];\r\n\r\n  await fetch(\"https://api.github.com/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(res =>\r\n      res.data.user.pinnedItems.edges.forEach(i => Projects.push(i.node))\r\n    )\r\n    .catch(error => console.error(error));\r\n  return Projects;\r\n};\r\n\r\nexport default getProjects;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport getProjects from \"../services/getProjects\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst ProjectsContainer = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjects().then(projs => setProjects(projs));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"projects-container\">\r\n        {projects && projects.length > 0 ? (\r\n          <>\r\n            <section className=\"projects-header\">\r\n              <h1>Projects</h1>\r\n            </section>\r\n            {projects.map(i => (\r\n              <ProjectCard project={i} key={i.id} />\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <Skeleton\r\n            variant=\"rect\"\r\n            animation=\"pulse\"\r\n            height={\"100%\"}\r\n            width={\"100%\"}\r\n          />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsContainer;\r\n","const fetch = require(\"node-fetch\");\r\n\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n    user(login: \"reifnotreef\") {\r\n      bio\r\n      avatarUrl\r\n      email\r\n      isHireable\r\n      name\r\n    }\r\n  }`;\r\n\r\nconst getUser = async () => {\r\n  return await fetch(\"https://api.github.com/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => res.data.user)\r\n    .catch(error => console.error(error));\r\n};\r\n\r\nexport default getUser;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport getUser from './services/getUser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nconst Header = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUser().then(info => setUser(info));\r\n  }, []);\r\n\r\n  return user == null ? (\r\n    <Skeleton\r\n      variant='circle'\r\n      animation='pulse'\r\n      height={'20rem'}\r\n      width={'20rem'}\r\n    />\r\n  ) : (\r\n    <section className='header-container'>\r\n      <img\r\n        src={user.avatarUrl}\r\n        alt='me'\r\n        className='profile-image'\r\n        style={{\r\n          height: '20rem',\r\n          width: '20rem',\r\n          borderRadius: '50%',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          display: 'block'\r\n        }}\r\n      />\r\n      <div className='header-copy'>\r\n        <h4>{user.name}</h4>\r\n        <p>\r\n          hirable:{' '}\r\n          {user.isHireable === true ? (\r\n            <CheckCircleOutlineIcon\r\n              className='hireable-icon'\r\n              htmlColor='black'\r\n              style={{\r\n                display: 'inline-block',\r\n                position: 'relative',\r\n                top: '5px'\r\n              }}\r\n            />\r\n          ) : (\r\n            <HighlightOffIcon\r\n              className='hireable-icon'\r\n              htmlColor='black'\r\n              style={{\r\n                display: 'inline-block',\r\n                position: 'relative',\r\n                top: '5px'\r\n              }}\r\n            />\r\n          )}\r\n        </p>\r\n        <p style={{ maxWidth: '60rem' }}>about me: {user.bio}</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Header;\r\n","// import BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport React from 'react';\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        height: '2rem',\r\n        paddingTop: '0.25rem',\r\n        backgroundColor: 'black',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n      }}\r\n      className='navigation-container'\r\n    >\r\n      <div\r\n        style={{\r\n          width: '60rem',\r\n          display: 'flex',\r\n          justifyContent: 'space-evenly'\r\n        }}\r\n      >\r\n        <a href='#root'>\r\n          <HomeIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='mailto:bridgerrhammond@gmail.com'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <EmailIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://github.com/reifnotreef'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <GitHubIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://www.linkedin.com/in/bridgerhammond/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <LinkedInIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://github.com/reifnotreef/reifnotreef.github.io/raw/deploy/img/BRH_Resume.pdf'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <PictureAsPdfIcon htmlColor='white' />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\r\nimport Header from \"./Header\";\r\n\r\nimport \"./index.css\";\r\nimport { Navigation } from \"./Navigation\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <ProjectsContainer className=\"projects-container\" />\r\n        <Navigation />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}