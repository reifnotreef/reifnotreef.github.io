{"version":3,"sources":["Projects/ProjectCard.tsx","services/getProjects.ts","Projects/ProjectsContainer.tsx","services/getUser.ts","Header.tsx","Navigation.tsx","index.tsx"],"names":["ProjectCard","project","className","style","borderTop","display","margin","name","target","rel","href","url","paddingLeft","htmlColor","homepageUrl","maxWidth","description","languages","edges","map","i","key","node","id","token","process","REACT_APP_API_KEY","getProjects","a","fetch","method","body","JSON","stringify","query","headers","Authorization","then","res","json","data","user","pinnedItems","Projects","ProjectsContainer","useState","projects","setProjects","updateProject","blah","useEffect","length","Skeleton","variant","animation","height","width","require","getUser","catch","error","console","Header","setUser","info","src","avatarUrl","alt","borderRadius","marginLeft","marginRight","isHireable","position","top","bio","company","textDecoration","Navigation","bottom","paddingTop","backgroundColor","justifyContent","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b70486e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport WebIcon from \"@material-ui/icons/Web\";\r\n\r\nexport type Project = {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  homepageUrl: string;\r\n  description: string;\r\n  languages: {edges: {node: { name: string}}[]};\r\n}\r\n\r\nconst ProjectCard: React.FC<{ project: Project }> = ({ project }) => {\r\n  return (\r\n    <section\r\n      className=\"project-card\"\r\n      key={project.id}\r\n      style={{ borderTop: \"1px solid black\" }}\r\n    >\r\n      <div>\r\n        <h3\r\n          className=\"project-name\"\r\n          style={{ display: \"inline-block\", margin: 0 }}\r\n        >\r\n          {project.name}\r\n        </h3>\r\n        <a\r\n          className=\"project-links\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={project.url}\r\n          style={{ display: \"inline-block\", paddingLeft: \"1rem\" }}\r\n        >\r\n          <GitHubIcon htmlColor=\"black\" />\r\n        </a>\r\n        {project.homepageUrl !== \"\" ? (\r\n          <a\r\n            className=\"project-links\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={project.homepageUrl}\r\n          >\r\n            <WebIcon htmlColor=\"black\" />\r\n          </a>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <p className=\"project-description\" style={{ maxWidth: \"60rem\" }}>\r\n        {project.description}\r\n      </p>\r\n      <p className=\"project-languages\">Languages: </p>\r\n      <ul>\r\n        {project?.languages?.edges?.map((i, key) => (\r\n          <li key={key}>{i?.node?.name}</li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import { Project } from \"../Projects/ProjectCard\";\r\nimport fetch from \"node-fetch\";\r\n\r\n// this is a read only token\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n  user(login: \"reifnotreef\") {\r\n    pinnedItems(first: 6, types: [REPOSITORY]) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          ... on Repository {\r\n            homepageUrl\r\n            name\r\n            description\r\n            id\r\n            url\r\n            languages(first: 6) {\r\n              edges {\r\n                node {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nconst getProjects = async (): Promise<Project[]> => {\r\n  // const Projects: Project[] = [];\r\n  const Projects: Project[] = await fetch(\"https://api.github.com/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res: any) => res.json())\r\n    .then((res: any) =>\r\n      res?.data?.user?.pinnedItems?.edges?.map((i: {node: Project}) => i?.node)\r\n    );\r\n  return Projects;\r\n};\r\n\r\nexport default getProjects;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ProjectCard, { Project } from \"./ProjectCard\";\r\n\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport getProjects from \"../services/getProjects\";\r\n\r\nconst ProjectsContainer: React.FC = () => {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const updateProject = async () => {\r\n    const blah = await getProjects();\r\n    setProjects(blah);\r\n  };\r\n  useEffect(() => {\r\n    updateProject();\r\n  }, []);\r\n\r\n  return (\r\n      <section className=\"projects-container\">\r\n        {projects && projects.length > 0 ? (\r\n          <>\r\n            <section className=\"projects-header\">\r\n              <h1>Projects</h1>\r\n            </section>\r\n            {projects.map((project) => (\r\n              <ProjectCard project={project} key={project.id} />\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <Skeleton\r\n            variant=\"rect\"\r\n            animation=\"pulse\"\r\n            height={\"100%\"}\r\n            width={\"100%\"}\r\n          />\r\n        )}\r\n      </section>\r\n  );\r\n};\r\n\r\nexport default ProjectsContainer;\r\n","const fetch = require(\"node-fetch\");\r\n\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n    user(login: \"reifnotreef\") {\r\n      bio\r\n      avatarUrl\r\n      email\r\n      isHireable\r\n      name\r\n      company\r\n    }\r\n  }`;\r\n\r\nconst getUser = async () => {\r\n  return await fetch(\"https://api.github.com/graphql\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then((res: any) => res.json())\r\n    .then((res: any) => res.data.user)\r\n    .catch((error: any) => console.error(error));\r\n};\r\n\r\nexport default getUser;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport getUser from './services/getUser';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\ntype User = {\r\n  avatarUrl: string;\r\n  name: string;\r\n  isHireable: boolean;\r\n  bio: string;\r\n  company: string;\r\n};\r\n\r\nconst Header: React.FC = () => {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    getUser().then((info: User) => setUser(info));\r\n  }, []);\r\n\r\n  return user == null ? (\r\n    <Skeleton\r\n      variant='circle'\r\n      animation='pulse'\r\n      height={'20rem'}\r\n      width={'20rem'}\r\n    />\r\n  ) : (\r\n    <section className='header-container'>\r\n      <img\r\n        src={user.avatarUrl}\r\n        alt='me'\r\n        className='profile-image'\r\n        style={{\r\n          height: '20rem',\r\n          width: '20rem',\r\n          borderRadius: '50%',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          display: 'block'\r\n        }}\r\n      />\r\n      <div className='header-copy'>\r\n        <h4>{user.name}</h4>\r\n        <p>\r\n          hirable:{' '}\r\n          {user.isHireable === true ? (\r\n            <CheckCircleOutlineIcon\r\n              className='hireable-icon'\r\n              htmlColor='black'\r\n              style={{\r\n                display: 'inline-block',\r\n                position: 'relative',\r\n                top: '5px'\r\n              }}\r\n            />\r\n          ) : (\r\n            <HighlightOffIcon\r\n              className='hireable-icon'\r\n              htmlColor='black'\r\n              style={{\r\n                display: 'inline-block',\r\n                position: 'relative',\r\n                top: '5px'\r\n              }}\r\n            />\r\n          )}\r\n        </p>\r\n        <p style={{ maxWidth: '60rem' }}>about me: {user.bio}</p>\r\n        <p style={{ maxWidth: '60rem' }}>company: <a href={user.company} style={{ textDecoration: 'none' }}>Dottid</a></p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Header;\r\n","import HomeIcon from '@material-ui/icons/Home';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nimport React from 'react';\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        height: '2rem',\r\n        paddingTop: '0.25rem',\r\n        backgroundColor: 'black',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n      }}\r\n      className='navigation-container'\r\n    >\r\n      <div\r\n        style={{\r\n          width: '60rem',\r\n          display: 'flex',\r\n          justifyContent: 'space-evenly'\r\n        }}\r\n      >\r\n        <a href='#root'>\r\n          <HomeIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='mailto:bridgerrhammond@gmail.com'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <EmailIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://github.com/reifnotreef'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <GitHubIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://www.linkedin.com/in/bridgerhammond/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <LinkedInIcon htmlColor='white' />\r\n        </a>\r\n        <a\r\n          href='https://github.com/reifnotreef/reifnotreef.github.io/raw/deploy/img/BRH_Resume.pdf'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          <PictureAsPdfIcon htmlColor='white' />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\r\nimport Header from \"./Header\";\r\n\r\nimport \"./index.css\";\r\nimport { Navigation } from \"./Navigation\";\r\n\r\nconst App: React.FC = () => (\r\n  <>\r\n    <Header />\r\n    <ProjectsContainer />\r\n    <Navigation />\r\n  </>\r\n);\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}