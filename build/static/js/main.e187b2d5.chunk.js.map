{"version":3,"sources":["Projects/ProjectCard.js","services/getProjects.js","services/loading.js","Projects/ProjectsContainer.js","services/getUser.js","Header/Header.js","index.js"],"names":["ProjectCard","props","className","key","project","id","name","description","primaryLanguage","target","rel","href","url","fetch","require","token","process","REACT_APP_API_KEY","getProjects","a","Projects","method","body","JSON","stringify","query","headers","Authorization","then","res","json","data","user","pinnedItems","edges","forEach","i","push","node","catch","error","console","Loading","type","color","ProjectsContainer","useState","projects","setProjects","useEffect","projs","length","map","getUser","Header","setUser","info","src","avatarUrl","alt","email","isHireable","bio","App","Component","ReactDOM","render","document","querySelector"],"mappings":"uPAwBeA,EAtBK,SAAAC,GAClB,OACE,6BAASC,UAAU,eAAeC,IAAKF,EAAMG,QAAQC,IACnD,wBAAIH,UAAU,gBAAgBD,EAAMG,QAAQE,MAC5C,uBAAGJ,UAAU,uBAAb,SAA0CD,EAAMG,QAAQG,aACxD,uBAAGL,UAAU,qBAAb,iBACiBD,EAAMG,QAAQI,gBAAgBF,MAE/C,uBAAGJ,UAAU,qBAAb,SACS,IACP,uBACEO,OAAO,SACPC,IAAI,sBACJC,KAAMV,EAAMG,QAAQQ,aAHtB,a,uBCZFC,EAAQC,EAAQ,GAGhBC,EAAQC,8CAAYC,kBAoCXC,EAlBE,uCAAG,4BAAAC,EAAA,6DACZC,EAAW,GADC,SAGZP,EAAM,iCAAkC,CAC5CQ,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,MAtBhB,qUAuBPC,QAAS,CACPC,cAAc,UAAD,OAAYZ,MAG1Ba,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OACPA,EAAIE,KAAKC,KAAKC,YAAYC,MAAMC,SAAQ,SAAAC,GAAC,OAAIhB,EAASiB,KAAKD,EAAEE,YAE9DC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,MAdd,gCAeXpB,GAfW,2CAAH,qD,iBChBFsB,EAFC,kBAAM,kBAAC,IAAD,CAAcC,KAAM,OAAQC,MAAO,WC0B1CC,EAvBW,WAAO,IAAD,EACEC,mBAAS,IADX,mBACvBC,EADuB,KACbC,EADa,KAO9B,OAJAC,qBAAU,WACR/B,IAAcU,MAAK,SAAAsB,GAAK,OAAIF,EAAYE,QACvC,IAGD,oCACE,6BAAShD,UAAU,mBACjB,4CAEF,6BAASA,UAAU,sBAChB6C,GAAYA,EAASI,OAAS,EAC7BJ,EAASK,KAAI,SAAAhB,GAAC,OAAI,kBAAC,EAAD,CAAahC,QAASgC,EAAGjC,IAAKiC,EAAE/B,QAElD,kBAAC,EAAD,SCtBJQ,G,MAAQC,EAAQ,IAGhBC,EAAQC,8CAAYC,kBAwBXoC,EAbF,uCAAG,sBAAAlC,EAAA,sEACDN,EAAM,iCAAkC,CACnDQ,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,MAbhB,iIAcPC,QAAS,CACPC,cAAc,UAAD,OAAYZ,MAG1Ba,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAKC,QACrBO,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,MAVlB,mFAAH,qDCmBEc,EA5BA,WAAO,IAAD,EACKR,mBAAS,MADd,mBACZd,EADY,KACNuB,EADM,KAOnB,OAJAN,qBAAU,WACRI,IAAUzB,MAAK,SAAA4B,GAAI,OAAID,EAAQC,QAC9B,IAEY,MAARxB,EACL,kBAAC,EAAD,MAEA,6BAAS9B,UAAU,oBACjB,yBAAKuD,IAAKzB,EAAK0B,UAAWC,IAAI,KAAKzD,UAAU,kBAC7C,4BAAK8B,EAAK1B,MACV,sCACW,IACT,uBACEG,OAAO,SACPC,IAAI,sBACJC,KAAI,iBAAYqB,EAAK4B,QAHvB,UAQF,iDAA0C,IAApB5B,EAAK6B,WAAsB,MAAQ,QACzD,mCAAS7B,EAAK8B,OCtBdC,E,iLAEF,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAmB7D,UAAU,4B,GALnB8D,aAWlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.e187b2d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ProjectCard = props => {\r\n  return (\r\n    <section className='project-card' key={props.project.id}>\r\n      <h3 className='project-name'>{props.project.name}</h3>\r\n      <p className='project-description'>what: {props.project.description}</p>\r\n      <p className='project-languages'>\r\n        how (mostly): {props.project.primaryLanguage.name}\r\n      </p>\r\n      <p className='project-code-link'>\r\n        where:{' '}\r\n        <a\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n          href={props.project.url}\r\n        >\r\n          github\r\n        </a>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","const fetch = require('node-fetch');\r\n\r\n// this is a read only token\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n    user(login:\"reifnotreef\") {\r\n    pinnedItems(first: 6, types: [REPOSITORY]) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          ... on Repository {\r\n            name, description, id, url, primaryLanguage {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\nconst getProjects = async () => {\r\n  const Projects = [];\r\n\r\n  await fetch('https://api.github.com/graphql', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(res =>\r\n      res.data.user.pinnedItems.edges.forEach(i => Projects.push(i.node))\r\n    )\r\n    .catch(error => console.error(error));\r\n  return Projects;\r\n};\r\n\r\nexport default getProjects;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Loading = () => <ReactLoading type={'spin'} color={'black'} />;\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport ProjectCard from './ProjectCard';\r\nimport getProjects from '../services/getProjects';\r\nimport Loading from '../services/loading';\r\n\r\nconst ProjectsContainer = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjects().then(projs => setProjects(projs));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className='projects-header'>\r\n        <h1>My Projects</h1>\r\n      </section>\r\n      <section className='projects-container'>\r\n        {projects && projects.length > 0 ? (\r\n          projects.map(i => <ProjectCard project={i} key={i.id} />)\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectsContainer;\r\n","const fetch = require('node-fetch');\r\n\r\n// this is a read only token\r\nconst token = process.env.REACT_APP_API_KEY;\r\nconst query = `query {\r\n    user(login: \"reifnotreef\") {\r\n      bio\r\n      avatarUrl\r\n      email\r\n      isHireable\r\n      name\r\n    }\r\n  }`;\r\n\r\nconst getUser = async () => {\r\n  return await fetch('https://api.github.com/graphql', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ query }),\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => res.data.user)\r\n    .catch(error => console.error(error));\r\n};\r\n\r\nexport default getUser;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Loading from '../services/loading';\r\nimport getUser from '../services/getUser';\r\n\r\nconst Header = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUser().then(info => setUser(info));\r\n  }, []);\r\n\r\n  return user == null ? (\r\n    <Loading />\r\n  ) : (\r\n    <section className='header-container'>\r\n      <img src={user.avatarUrl} alt='me' className='profile-image' />\r\n      <h4>{user.name}</h4>\r\n      <p>\r\n        contact:{' '}\r\n        <a\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n          href={`mailto:${user.email}`}\r\n        >\r\n          email\r\n        </a>\r\n      </p>\r\n      <p>looking for work: {user.isHireable === true ? 'yep' : 'nope'}</p>\r\n      <p>bio: {user.bio}</p>\r\n    </section>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ProjectsContainer from './Projects/ProjectsContainer';\r\nimport './index.css';\r\nimport Header from './Header/Header';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <ProjectsContainer className='projects-container' />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}